#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200

// Layer Definitions
#define QWERTY 0
#define NAV 1
#define SYM 2
#define NUM 3
#define FUN 4

// Behavior configuration
&sk {
    release-after-ms = <1000>;
    quick-release;
};

&sl {
    release-after-ms = <1000>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;    
};

// Keymap configuration
/ {
    behaviors {
                // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            global-quick-tap-ms = <150>;         // requires PR #1387
            // hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;         // requires PR #1387
            // hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;         // requires PR #1387
            // hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_FAST_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick_tap_ms = <175>;
            global-quick-tap-ms = <150>;         // requires PR #1387
            // hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;             // requires PR #1423
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick_tap_ms = <200>;
        };

        shftcw: shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };
        tltab: tilde_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_TAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp TILDE>;
            mods = <(MOD_LGUI|MOD_LSFT)>;
        };
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
            quick-tap-ms = <150>;
            global-quick-tap-ms = <130>;         // requires PR #1387
        };
        u_ltn: u_ltn {
            compatible = "zmk,behavior-hold-tap";
            label = "u_ltn";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&tltab     &kp Q       &kp W       &kp E          &kp R          &kp T                &kp Y          &kp U         &kp I          &kp O         &kp P          &kp MINUS 
&gresc       &kp A       &kp S       &kp D          &kp F          &kp G                &kp H          &kp J         &kp K          &kp L         &kp SEMI       &kp SQT
&kp LCTRL    &kp Z       &kp X       &kp C          &kp V          &kp B                &kp N          &kp M         &kp CMMA       &kp DOT       &lt FUN FSLH   &mo FUN
                                &kp LGUI   &shftcw  &u_ltn NAV SPACE                 &u_lt SYM BSPC &u_lt NUM RET &kp LALT
            >;
        };

        navigation {
            bindings = <
&trans  &kp HOME    &kp PG_DN    &kp PG_UP     &kp END       &kp C_VOL_UP       &none         &none         &none         &none         &none         &trans
&trans  &sk LGUI    &sk LALT     &sk LCTRL     &sk LSHFT     &kp C_VOL_DN       &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &none         &trans
&trans  &kp INS       &kp DEL    &none         &none         &none              &kp K_PREV    &kp K_PP      &kp K_NEXT    &none         &none         &trans
                                &trans         &trans     &trans        &trans        &trans     &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCL      &kp AT        &kp LBRC      &kp RBRC      &kp HASH       &none       &none      &none       &none      &none    &trans
&trans  &kp DLLR      &kp PRCNT     &kp LPAR      &kp RPAR      &kp EQUAL      &none       &none      &none       &none      &none    &trans
&trans  &kp AMPS      &kp ASTRK     &kp LBKT      &kp RBKT      &kp CARET      &none       &none      &none       &none      &none    &trans
                             &trans      &trans  &trans              &trans        &trans     &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp KP_MINUS  &kp N7        &kp N8      &kp N9      &kp PLUS       &none       &none      &none       &none      &none    &trans
&trans  &kp N0        &kp N4        &kp N5      &kp N6      &kp EQUAL      &none       &none      &none       &none      &none    &trans
&trans  &kp PIPE2     &kp N1        &kp N2      &kp N3      &kp BSLH       &none       &none      &none       &none      &none    &trans
                             &trans      &trans  &trans              &trans        &trans     &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F12        &kp F7        &kp F8        &kp F9        &none               &caps_word    &none         &none         &none          &none        &trans
&trans  &kp F11        &kp F4        &kp F5        &kp F6        &none               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4 &trans
&trans  &kp F10        &kp F1        &kp F2        &kp F3        &none               &bt BT_CLR    &none         &none         &none          &none        &trans
                         &bootloader   &reset        &trans            &bootloader        &reset        &trans
            >;
        };
    };
};
